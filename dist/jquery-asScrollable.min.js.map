{"version":3,"sources":["jquery-asScrollable.es.js"],"names":["global","factory","define","amd","exports","mod","jqueryAsScrollableEs","this","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","$","getTime","window","performance","now","Date","isPercentage","n","indexOf","conventToPercentage","parseFloat","toFixed","convertPercentageToFloat","slice","hasOwnProperty","DEFAULTS","namespace","skin","contentSelector","containerSelector","enabledClass","disabledClass","draggingClass","hoveringClass","scrollingClass","direction","showOnHover","showOnBarHover","duration","easing","responsive","throttle","scrollbar","isFFLionScrollbar","isOSXFF","ua","version","navigator","userAgent","test","exec","replace","instanceId","AsScrollable","element","options","$element","extend","data","classes","wrap","content","container","bar","barHide","attributes","vertical","axis","overflow","scroll","scrollLength","pageOffset","ffPadding","clientLength","offset","crossLength","crossClientLength","crossOffset","horizontal","_states","$bar","_frameId","_timeoutId","asScrollbar","getEasing","init","value","position","css","$container","find","$wrap","parent","height","$content","overflowX","overflowY","addClass","initLayout","createBar","bindEvents","trigger","_this","on","eventNameWithId","update","that","eventName","enter","removeClass","is","leave","showBar","hideBar","NAMESPACE$1","proxy","oldLeft","offsetLeft","getOffset","getPercentOffset","getScrollLength","oldTop","offsetTop","e","api","getBarApi","moveTo","clearTimeout","setTimeout","scrollTo","off","parentLength","parentNode","scrollbarWidth","getBrowserScrollbarWidth","useCssTransitions","keyboard","appendTo","add","updateBarHandle","eventType","_len","arguments","params","Array","_key","concat","onFunction","word","substring","toUpperCase","apply","state","undefined","events","split","join","func","wait","_this2","_now","timeout","context","args","result","previous","later","_len2","_key2","remaining","outer","outerStyle","document","createElement","style","width","top","body","appendChild","removeChild","getContainerLength","sync","type","move","callback","startTime","start","end","requestAnimationFrame","run","time","percent","fn","current","cancelAnimationFrame","scrollBy","getBar","containerLength","enable","setHandleLength","getBarLength","disable","unbindEvents","unStyle"],"mappings":";;;;;;;CAAA,SAAAA,EAAAC,GACA,GAAA,mBAAAC,QAAAA,OAAAC,IACAD,UAAAD,QACA,GAAA,oBAAAG,QACAH,QACA,CACA,IAAAI,GACAD,YAEAH,IACAD,EAAAM,qBAAAD,EAAAD,SAVA,CAYAG,KAAA,WACA,aAgBA,SAAAC,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,MAAA,IAAAC,UAAA,qCAhBA,IAAAC,EACA,mBAAAC,QAAA,iBAAAA,OAAAC,SACA,SAAAC,GACA,cAAAA,GAEA,SAAAA,GACA,OAAAA,GACA,mBAAAF,QACAE,EAAAC,cAAAH,QACAE,IAAAF,OAAAI,UACA,gBACAF,GASAG,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CACA,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,IAAAA,EAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIA,OAAA,SAAAd,EAAAqB,EAAAC,GAGA,OAFAD,GAAAZ,EAAAT,EAAAO,UAAAc,GACAC,GAAAb,EAAAT,EAAAsB,GACAtB,GAdA,IAyBA,SAAAuB,GAkCA,SAAAC,IACA,YAAA,IAAAC,OAAAC,aAAAD,OAAAC,YAAAC,IACAF,OAAAC,YAAAC,MAEAC,KAAAD,MAGA,SAAAE,EAAAC,GACA,MAAA,iBAAAA,IAAA,IAAAA,EAAAC,QAAA,KAGA,SAAAC,EAAAF,GAMA,OALAA,EAAA,EACAA,EAAA,EACAA,EAAA,IACAA,EAAA,GAEA,IAAAG,WAAAH,GAAAI,QAAA,GAAA,IAGA,SAAAC,EAAAL,GACA,OAAAG,WAAAH,EAAAM,MAAA,GAAA,GAAA,IAAA,IApDAb,EAAAA,GAAAA,EAAAc,eAAA,WAAAd,EAAA,QAAAA,EAEA,IAAAe,GACAC,UAAA,eAEAC,KAAA,KAEAC,gBAAA,KACAC,kBAAA,KAEAC,aAAA,aACAC,cAAA,cAEAC,cAAA,cACAC,cAAA,cACAC,eAAA,eAEAC,UAAA,WAEAC,aAAA,EACAC,gBAAA,EAEAC,SAAA,IACAC,OAAA,UAEAC,YAAA,EACAC,SAAA,GAEAC,cA2BAC,EAAA,WAGA,IAAAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGA,OAFAD,EAAAjC,OAAAmC,UAAAC,aACAJ,EAAA,8BAAAK,KAAAJ,OAIAC,EAAA,mBAAAI,KAAAL,MAEAC,EAAAA,EAAA,GAAAK,QAAA,OAAA,KAEAP,IAAAE,EAAA,IAfA,GAoBAM,EAAA,EAEAC,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAtE,EAAAD,KAAAqE,GAEArE,KAAAwE,SAAA9C,EAAA4C,GACAC,EAAAvE,KAAAuE,QAAA7C,EAAA+C,UAEAhC,EACA8B,MACAvE,KAAAwE,SAAAE,KAAA,gBAGA1E,KAAA2E,SACAC,KAAAL,EAAA7B,UACAmC,QAAAN,EAAA7B,UAAA,WACAoC,UAAAP,EAAA7B,UAAA,aACAqC,IAAAR,EAAA7B,UAAA,OACAsC,QAAAT,EAAA7B,UAAA,YACAC,KAAA4B,EAAA5B,MAGA3C,KAAAiF,YACAC,UACAC,KAAA,IACAC,SAAA,aAEAC,OAAA,YACAC,aAAA,eACAC,WAAA,cAEAC,UAAA,gBAEAxE,OAAA,SACAyE,aAAA,eACAC,OAAA,eAEAC,YAAA,QACAC,kBAAA,cACAC,YAAA,eAEAC,YACAX,KAAA,IACAC,SAAA,aAEAC,OAAA,aACAC,aAAA,cACAC,WAAA,cAEAC,UAAA,iBAEAxE,OAAA,QACAyE,aAAA,cACAC,OAAA,cAEAC,YAAA,SACAC,kBAAA,eACAC,YAAA,iBAKA7F,KAAA+F,WAGA/F,KAAA8F,WAAA,KACA9F,KAAAkF,SAAA,KAEAlF,KAAAgG,KAAA,KAGAhG,KAAAiG,SAAA,KACAjG,KAAAkG,WAAA,KAEAlG,KAAAoE,aAAAA,EAEApE,KAAAuD,OACA7B,EAAAyE,YAAAC,UAAApG,KAAAuE,QAAAhB,SACA7B,EAAAyE,YAAAC,UAAA,QAEApG,KAAAqG,cAGA1F,EACA0D,IAGA9C,IAAA,OACA+E,MAAA,WACA,IAAAC,EAAAvG,KAAAwE,SAAAgC,IAAA,YAgCA,OA9BAxG,KAAAuE,QAAA1B,mBACA7C,KAAAyG,WAAAzG,KAAAwE,SAAAkC,KACA1G,KAAAuE,QAAA1B,mBAEA7C,KAAA2G,MAAA3G,KAAAwE,SAEA,WAAA+B,GACAvG,KAAA2G,MAAAH,IAAA,WAAA,cAGAxG,KAAAyG,WAAAzG,KAAAwE,SAAAI,KAAA,SACA5E,KAAA2G,MAAA3G,KAAAyG,WAAAG,SACA5G,KAAA2G,MAAAE,OAAA7G,KAAAwE,SAAAqC,UAEA,WAAAN,EACAvG,KAAA2G,MAAAH,IAAA,WAAAD,GAEAvG,KAAA2G,MAAAH,IAAA,WAAA,aAIAxG,KAAAuE,QAAA3B,gBACA5C,KAAA8G,SAAA9G,KAAAyG,WAAAC,KACA1G,KAAAuE,QAAA3B,kBAGA5C,KAAA8G,SAAA9G,KAAAyG,WAAA7B,KAAA,SACA5E,KAAAyG,WAAAzG,KAAA8G,SAAAF,UAGA5G,KAAAuE,QAAApB,WACA,IAAA,WACAnD,KAAAkF,UAAA,EACA,MAEA,IAAA,aACAlF,KAAA8F,YAAA,EACA,MAEA,IAAA,OACA9F,KAAA8F,YAAA,EACA9F,KAAAkF,UAAA,EACA,MAEA,IAAA,OACA,IAAA6B,EAAA/G,KAAAwE,SAAAgC,IAAA,cACAQ,EAAAhH,KAAAwE,SAAAgC,IAAA,cAEA,WAAAO,GAAA,SAAAA,IACA/G,KAAA8F,YAAA,GAEA,WAAAkB,GAAA,SAAAA,IACAhH,KAAAkF,UAAA,IASAlF,KAAAkF,UAAAlF,KAAA8F,cAIA9F,KAAA2G,MAAAM,SAAAjH,KAAA2E,QAAAC,MACA5E,KAAAyG,WAAAQ,SAAAjH,KAAA2E,QAAAG,WACA9E,KAAA8G,SAAAG,SAAAjH,KAAA2E,QAAAE,SAEA7E,KAAAuE,QAAA5B,MACA3C,KAAA2G,MAAAM,SAAAjH,KAAA2E,QAAAhC,MAGA3C,KAAA2G,MAAAM,SAAAjH,KAAAuE,QAAAzB,cAEA9C,KAAAkF,WACAlF,KAAA2G,MAAAM,SAAAjH,KAAA2E,QAAAC,KAAA,aACA5E,KAAAkH,WAAA,YACAlH,KAAAmH,UAAA,aAGAnH,KAAA8F,aACA9F,KAAA2G,MAAAM,SAAAjH,KAAA2E,QAAAC,KAAA,eACA5E,KAAAkH,WAAA,cACAlH,KAAAmH,UAAA,eAGAnH,KAAAoH,aAEApH,KAAAqH,QAAA,aAIA9F,IAAA,aACA+E,MAAA,WACA,IAAAgB,EAAAtH,KAiBA,GAfAA,KAAAuE,QAAAf,aACA9B,EAAAE,QAAA2F,GACAvH,KAAAwH,gBAAA,qBACA,WACAF,EAAAG,WAGA/F,EAAAE,QAAA2F,GACAvH,KAAAwH,gBAAA,UACAxH,KAAAyD,SAAA,WACA6D,EAAAG,UACAzH,KAAAuE,QAAAd,YAIAzD,KAAA8F,YAAA9F,KAAAkF,SAAA,CAIA,IAAAwC,EAAA1H,KAEAA,KAAA2G,MAAAY,GAAAvH,KAAA2H,UAAA,cAAA,WACAD,EAAAf,MAAAM,SAAAK,EAAA/C,QAAAtB,eACAyE,EAAAE,MAAA,YACAF,EAAAL,QAAA,WAGArH,KAAA2G,MAAAY,GAAAvH,KAAA2H,UAAA,cAAA,WACAD,EAAAf,MAAAkB,YAAAP,EAAA/C,QAAAtB,eAEAyE,EAAAI,GAAA,cAGAJ,EAAAK,MAAA,YACAL,EAAAL,QAAA,cAGArH,KAAAuE,QAAAnB,cACApD,KAAAuE,QAAAlB,eACArD,KAAAgG,KACAuB,GAAA,qBAAA,WACAG,EAAA5B,YACA4B,EAAAM,QAAA,cAEAN,EAAAxC,UACAwC,EAAAM,QAAA,cAGAT,GAAA,uBAAA,WACAG,EAAA5B,YACA4B,EAAAO,QAAA,cAEAP,EAAAxC,UACAwC,EAAAO,QAAA,eAIAjI,KAAAwE,SAAA+C,GACAW,sBACAxG,EAAAyG,MAAAnI,KAAAgI,QAAAhI,OAEAA,KAAAwE,SAAA+C,GACAW,wBACAxG,EAAAyG,MAAAnI,KAAAiI,QAAAjI,SAKAA,KAAAyG,WAAAc,GAAAvH,KAAA2H,UAAA,UAAA,WACA,GAAAD,EAAA5B,WAAA,CACA,IAAAsC,EAAAV,EAAAW,WACAX,EAAAW,WAAAX,EAAAY,UAAA,cAEAF,IAAAV,EAAAW,aACAX,EAAAL,QACA,SACAK,EAAAa,iBAAA,cACA,cAGA,IAAAb,EAAAW,YACAX,EAAAL,QAAA,YAAA,cAGAK,EAAAW,aAAAX,EAAAc,gBAAA,eAEAd,EAAAL,QAAA,YAAA,eAKA,GAAAK,EAAAxC,SAAA,CACA,IAAAuD,EAAAf,EAAAgB,UAEAhB,EAAAgB,UAAAhB,EAAAY,UAAA,YAEAG,IAAAf,EAAAgB,YACAhB,EAAAL,QACA,SACAK,EAAAa,iBAAA,YACA,YAGA,IAAAb,EAAAgB,WACAhB,EAAAL,QAAA,YAAA,YAEAK,EAAAgB,YAAAhB,EAAAc,gBAAA,aACAd,EAAAL,QAAA,YAAA,gBAMArH,KAAAwE,SAAA+C,GAAAW,uBAAA,SACAS,EACAC,EACAtC,EACAnD,GAEAuE,EAAAI,GAAA,eACAJ,EAAAE,MAAA,aACAF,EAAAf,MAAAM,SAAAS,EAAAnD,QAAArB,iBAEA0F,EAAAC,UAAA1F,GAEA2F,OAAA3G,EAAAmE,IAAA,GAAA,GAEAyC,aAAArB,EAAAxB,YACAwB,EAAAxB,WAAA8C,WAAA,WACAtB,EAAAf,MAAAkB,YAAAH,EAAAnD,QAAArB,gBACAwE,EAAAK,MAAA,cACA,OAGA/H,KAAAgG,KAAAuB,GAAA,sBAAA,SAAAoB,EAAAC,EAAAtC,GACA,iBAAAqC,EAAA9H,OAAAsC,WACAuE,EAAAuB,SACAN,EAAA9H,OAAAsC,UACAhB,EAAAmE,IACA,GACA,KAKAtG,KAAAgG,KACAuB,GAAA,oBAAA,WACAG,EAAAf,MAAAM,SAAAS,EAAAnD,QAAAvB,iBAEAuE,GAAA,uBAAA,WACAG,EAAAf,MAAAkB,YAAAH,EAAAnD,QAAAvB,qBAKAzB,IAAA,eACA+E,MAAA,WACAtG,KAAA2G,MAAAuC,IAAAlJ,KAAA2H,aACA3H,KAAAwE,SACA0E,IAAAhB,wBACAgB,IAAAhB,uBACAgB,IAAAhB,yBACAlI,KAAAyG,WAAAyC,IAAAlJ,KAAA2H,aACAjG,EAAAE,QAAAsH,IAAAlJ,KAAAwH,sBAIAjG,IAAA,aACA+E,MAAA,SAAAnD,GACA,aAAAA,GACAnD,KAAAyG,WAAAD,IAAA,SAAAxG,KAAA2G,MAAAE,UAEA,IAAA5B,EAAAjF,KAAAiF,WAAA9B,GAKAgG,EAJAnJ,KAAAyG,WAAA,GAKA2C,WAAAnE,EAAAW,mBACAyD,EAAArJ,KAAAsJ,yBAAAnG,GAEAnD,KAAA8G,SAAAN,IAAAvB,EAAAU,YAAAwD,EAAA,MACAnJ,KAAAyG,WAAAD,IACAvB,EAAAU,YACA0D,EAAAF,EAAA,MAGA,IAAAE,GAAA1F,GACA3D,KAAAyG,WAAAD,IAAAvB,EAAAO,UAAA,OAKAjE,IAAA,YACA+E,MAAA,SAAAnD,GACA,IAAAoB,EAAA7C,EAAA+C,OAAAzE,KAAAuE,QAAAb,WACAhB,UAAA1C,KAAA2E,QAAAI,IACA5B,UAAAA,EACAoG,mBAAA,EACAC,UAAA,IAEAxD,EAAAtE,EAAA,SACAsE,EAAAG,YAAA5B,GAEAvE,KAAAuE,QAAAnB,aACA4C,EAAAiB,SAAAjH,KAAA2E,QAAAK,SAGAgB,EAAAyD,SAAAzJ,KAAA2G,OAEA3G,KAAA,IAAAmD,GAAA6C,EAEA,OAAAhG,KAAAgG,KACAhG,KAAAgG,KAAAA,EAEAhG,KAAAgG,KAAAhG,KAAAgG,KAAA0D,IAAA1D,GAGAhG,KAAA2J,gBAAAxG,MAIA5B,IAAA,UACA+E,MAAA,SAAAsD,GACA,IACA,IAAAC,EAAAC,UAAA9I,OACA+I,EAAAC,MAAAH,EAAA,EAAAA,EAAA,EAAA,GACAI,EAAA,EACAA,EAAAJ,EACAI,IAEAF,EAAAE,EAAA,GAAAH,UAAAG,GAGA,IAAAvF,GAAA1E,MAAAkK,OAAAH,GAGA/J,KAAAwE,SAAA6C,QAAAa,iBAAA0B,EAAAlF,GAMA,IAAAyF,EAAA,MAHAP,EAAAA,EAAAzF,QAAA,WAAA,SAAAiG,GACA,OAAAA,EAAAC,UAAA,EAAA,GAAAC,cAAAF,EAAAC,UAAA,MAIA,mBAAArK,KAAAuE,QAAA4F,IACAnK,KAAAuE,QAAA4F,GAAAI,MAAAvK,KAAA+J,MAKAxI,IAAA,KACA+E,MAAA,SAAAkE,GACA,OAAAxK,KAAA+F,QAAAyE,IAAAxK,KAAA+F,QAAAyE,GAAA,KAIAjJ,IAAA,QACA+E,MAAA,SAAAkE,QACAC,IAAAzK,KAAA+F,QAAAyE,KACAxK,KAAA+F,QAAAyE,GAAA,GAIAxK,KAAA+F,QAAAyE,GAAA,KAIAjJ,IAAA,QACA+E,MAAA,SAAAkE,GAGAxK,KAAA+F,QAAAyE,IAAA,KAIAjJ,IAAA,YACA+E,MAAA,SAAAoE,GACA,GAAA,iBAAAA,GAAA,KAAAA,EACA,MAAA,IAAA1K,KAAAuE,QAAA7B,UAKA,IAAA,IADA1B,GADA0J,EAAAA,EAAAC,MAAA,MACA3J,OACAD,EAAA,EAAAA,EAAAC,EAAAD,IACA2J,EAAA3J,GAAA2J,EAAA3J,GAAA,IAAAf,KAAAuE,QAAA7B,UAEA,OAAAgI,EAAAE,KAAA,QAIArJ,IAAA,kBACA+E,MAAA,SAAAoE,GACA,GAAA,iBAAAA,GAAA,KAAAA,EACA,MAAA,IAAA1K,KAAAuE,QAAA7B,UAAA,IAAA1C,KAAAoE,WAKA,IAAA,IADApD,GADA0J,EAAAA,EAAAC,MAAA,MACA3J,OACAD,EAAA,EAAAA,EAAAC,EAAAD,IACA2J,EAAA3J,GACA2J,EAAA3J,GACA,IACAf,KAAAuE,QAAA7B,UACA,IACA1C,KAAAoE,WAEA,OAAAsG,EAAAE,KAAA,QAIArJ,IAAA,WACA+E,MAAA,SAAAuE,EAAAC,GACA,IAAAC,EAAA/K,KAEAgL,EACAjJ,KAAAD,KACA,WACA,OAAA,IAAAC,MAAAJ,WAGAsJ,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,EAAA,EACAC,EAAA,WACAD,EAAAL,IACAC,EAAA,KACAG,EAAAP,EAAAN,MAAAW,EAAAC,GACAF,IACAC,EAAAC,EAAA,OAIA,OAAA,WACA,IACA,IAAAI,EAAAzB,UAAA9I,OACA+I,EAAAC,MAAAuB,GACAC,EAAA,EACAA,EAAAD,EACAC,IAEAzB,EAAAyB,GAAA1B,UAAA0B,GAIA,IAAA1J,EAAAkJ,IACAS,EAAAX,GAAAhJ,EAAAuJ,GAgBA,OAfAH,EAAAH,EACAI,EAAApB,EACA0B,GAAA,GAAAA,EAAAX,GACAG,IACAlC,aAAAkC,GACAA,EAAA,MAEAI,EAAAvJ,EACAsJ,EAAAP,EAAAN,MAAAW,EAAAC,GACAF,IACAC,EAAAC,EAAA,OAEAF,IACAA,EAAAjC,WAAAsC,EAAAG,IAEAL,MAKA7J,IAAA,2BACA+E,MAAA,SAAAnD,GACA,IAAA8B,EAAAjF,KAAAiF,WAAA9B,GACAuI,OAAA,EACAC,OAAA,EACA,OAAA1G,EAAAoE,eACApE,EAAAoE,gBAEAqC,EAAAE,SAAAC,cAAA,OACAF,EAAAD,EAAAI,MACAH,EAAApF,SAAA,WACAoF,EAAAI,MAAA,QACAJ,EAAA9E,OAAA,QACA8E,EAAAvG,SAAA,SACAuG,EAAAK,IAAA,UACAJ,SAAAK,KAAAC,YAAAR,GACAzG,EAAAoE,eACAqC,EAAAzG,EAAAS,QAAAgG,EAAAzG,EAAAQ,cACAmG,SAAAK,KAAAE,YAAAT,GACAzG,EAAAoE,mBAIA9H,IAAA,YACA+E,MAAA,SAAAnD,GACA,IAAA8B,EAAAjF,KAAAiF,WAAA9B,GACA2B,EAAA9E,KAAAyG,WAAA,GAEA,OACA3B,EAAAG,EAAAM,aAAAT,EAAAG,EAAAI,WAKA9D,IAAA,mBACA+E,MAAA,SAAAnD,GACA,OACAnD,KAAAsI,UAAAnF,GAAAnD,KAAAwI,gBAAArF,MAKA5B,IAAA,qBACA+E,MAAA,SAAAnD,GACA,OAAAnD,KAAAyG,WAAA,GACAzG,KAAAiF,WAAA9B,GAAAsC,iBAKAlE,IAAA,kBACA+E,MAAA,SAAAnD,GAIA,OAHAnD,KAAA8G,SAAA,GACA9G,KAAAiF,WAAA9B,GAAAmC,cAEAtF,KAAAoM,mBAAAjJ,MAIA5B,IAAA,WACA+E,MAAA,SAAAnD,EAAAmD,EAAAe,EAAAgF,GACA,IAAAC,OACA,IAAAhG,EAAA,YAAAjG,EAAAiG,GAEA,WAAAgG,IACAtK,EAAAsE,KACAA,EACAhE,EAAAgE,GACAtG,KAAAwI,gBAAArF,IAGAmD,EAAAlE,WAAAkE,GACAgG,EAAA,UAGA,WAAAA,GAIAtM,KAAAuM,KAAApJ,EAAAmD,EAAAe,EAAAgF,MAIA9K,IAAA,WACA+E,MAAA,SAAAnD,EAAAmD,EAAAe,EAAAgF,GACA,IAAAC,OACA,IAAAhG,EAAA,YAAAjG,EAAAiG,GAEA,WAAAgG,IACAtK,EAAAsE,KACAA,EACAhE,EAAAgE,GACAtG,KAAAwI,gBAAArF,IAGAmD,EAAAlE,WAAAkE,GACAgG,EAAA,UAGA,WAAAA,GAIAtM,KAAAuM,KACApJ,EACAnD,KAAAsI,UAAAnF,GAAAmD,EACAe,EACAgF,MAKA9K,IAAA,OACA+E,MAAA,SAAAnD,EAAAmD,EAAAe,EAAAgF,GACA,IAAA,IAAArM,KAAAmD,IAAA,iBAAAmD,EAAA,CAIAtG,KAAA4H,MAAA,UAEAtB,EAAA,EACAA,EAAA,EACAA,EAAAtG,KAAAwI,gBAAArF,KACAmD,EAAAtG,KAAAwI,gBAAArF,IAGA,IAAA8B,EAAAjF,KAAAiF,WAAA9B,GAEAuE,EAAA1H,KACAwM,EAAA,WACA9E,EAAAK,MAAA,WAGA,GAAAsE,EACArM,KAAAyG,WAAA,GAAAxB,EAAAI,QAAAiB,GAEA,IAAAe,GACArH,KAAAqH,QACA,SACAf,EAAAtG,KAAAwI,gBAAArF,GACAA,GAGAqJ,QACA,CACAxM,KAAA4H,MAAA,aAEA,IAAA6E,EAAA9K,IACA+K,EAAA1M,KAAAsI,UAAAnF,GACAwJ,EAAArG,EAiCAtG,KAAAiG,SAAArE,OAAAgL,sBA/BA,SAAAC,EAAAC,GACA,IAAAC,GAAAD,EAAAL,GAAA/E,EAAAnD,QAAAjB,SAEAyJ,EAAA,IACAA,EAAA,GAGAA,EAAArF,EAAAnE,OAAAyJ,GAAAD,GAEA,IAAAE,EAAA7K,WAAAsK,EAAAK,GAAAJ,EAAAD,GAAA,IACAhF,EAAAjB,WAAA,GAAAxB,EAAAI,QAAA4H,GAEA,IAAA5F,GACAK,EAAAL,QACA,SACAf,EAAAoB,EAAAc,gBAAArF,GACAA,GAIA,IAAA4J,GACAnL,OAAAsL,qBAAAxF,EAAAzB,UACAyB,EAAAzB,SAAA,KAEAyB,EAAAK,MAAA,aACAyE,KAEA9E,EAAAzB,SAAArE,OAAAgL,sBAAAC,UASAtL,IAAA,YACA+E,MAAA,SAAAA,EAAAe,EAAAgF,GACA,OAAArM,KAAAiJ,SAAA,aAAA3C,EAAAe,EAAAgF,MAIA9K,IAAA,YACA+E,MAAA,SAAAA,EAAAe,EAAAgF,GACA,OAAArM,KAAAiJ,SAAA,WAAA3C,EAAAe,EAAAgF,MAIA9K,IAAA,YACA+E,MAAA,SAAAA,EAAAe,EAAAgF,GACA,OAAArM,KAAAmN,SAAA,aAAA7G,EAAAe,EAAAgF,MAIA9K,IAAA,YACA+E,MAAA,SAAAA,EAAAe,EAAAgF,GACA,OAAArM,KAAAmN,SAAA,WAAA7G,EAAAe,EAAAgF,MAIA9K,IAAA,SACA+E,MAAA,SAAAnD,GACA,OAAAA,GAAAnD,KAAA,IAAAmD,GACAnD,KAAA,IAAAmD,GAEAnD,KAAAgG,QAIAzE,IAAA,YACA+E,MAAA,SAAAnD,GACA,OAAAnD,KAAAoN,OAAAjK,GAAAuB,KAAA,kBAIAnD,IAAA,UACA+E,MAAA,WACA,OAAAtG,KAAAoN,OAAA,iBAIA7L,IAAA,UACA+E,MAAA,WACA,OAAAtG,KAAAoN,OAAA,eAIA7L,IAAA,UACA+E,MAAA,SAAAnD,GACAnD,KAAAoN,OAAAjK,GAAA0E,YAAA7H,KAAA2E,QAAAK,YAIAzD,IAAA,UACA+E,MAAA,SAAAnD,GACAnD,KAAAoN,OAAAjK,GAAA8D,SAAAjH,KAAA2E,QAAAK,YAIAzD,IAAA,kBACA+E,MAAA,SAAAnD,GACA,IAAAyF,EAAA5I,KAAA6I,UAAA1F,GAEA,GAAAyF,EAAA,CAIA,IAAAyE,EAAArN,KAAAoM,mBAAAjJ,GACAmC,EAAAtF,KAAAwI,gBAAArF,GAEAmC,EAAA,GACAsD,EAAAd,GAAA,aACAc,EAAA0E,SAEA1E,EAAA2E,gBACA3E,EAAA4E,eACAH,GACA/H,EAAA+H,IACA,IAGAzE,EAAA6E,cAKAlM,IAAA,UACA+E,MAAA,WACAtG,KAAA8H,GAAA,cACA9H,KAAA4H,MAAA,YACA5H,KAAA2G,MACAM,SAAAjH,KAAAuE,QAAAxB,eACA8E,YAAA7H,KAAAuE,QAAAzB,cAEA9C,KAAA0N,eACA1N,KAAA2N,i0CA90BA,8HAIA,ooBAhFA","file":"jquery-asScrollable.min.js","sourcesContent":["/**\n* jQuery asScrollable v0.4.8\n* https://github.com/amazingSurge/jquery-asScrollable\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\n(function ($) {\n'use strict';\n\n$ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n\nvar DEFAULTS = {\n  namespace: 'asScrollable',\n\n  skin: null,\n\n  contentSelector: null,\n  containerSelector: null,\n\n  enabledClass: 'is-enabled',\n  disabledClass: 'is-disabled',\n\n  draggingClass: 'is-dragging',\n  hoveringClass: 'is-hovering',\n  scrollingClass: 'is-scrolling',\n\n  direction: 'vertical', // vertical, horizontal, both, auto\n\n  showOnHover: true,\n  showOnBarHover: false,\n\n  duration: 500,\n  easing: 'ease-in', // linear, ease, ease-in, ease-out, ease-in-out\n\n  responsive: true,\n  throttle: 20,\n\n  scrollbar: {}\n};\n\nfunction getTime() {\n  if (typeof window.performance !== 'undefined' && window.performance.now) {\n    return window.performance.now();\n  }\n    return Date.now();\n}\n\nfunction isPercentage(n) {\n  return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n\nfunction conventToPercentage(n) {\n  if (n < 0) {\n    n = 0;\n  } else if (n > 1) {\n    n = 1;\n  }\n  return `${parseFloat(n).toFixed(4) * 100}%`;\n}\n\nfunction convertPercentageToFloat(n) {\n  return parseFloat(n.slice(0, -1) / 100, 10);\n}\n\nlet isFFLionScrollbar = (() => {\n  'use strict';\n\n  let isOSXFF, ua, version;\n  ua = window.navigator.userAgent;\n  isOSXFF = /(?=.+Mac OS X)(?=.+Firefox)/.test(ua);\n  if (!isOSXFF) {\n    return false;\n  }\n  version = /Firefox\\/\\d{2}\\./.exec(ua);\n  if (version) {\n    version = version[0].replace(/\\D+/g, '');\n  }\n  return isOSXFF && +version > 23;\n})();\n\nconst NAMESPACE$1 = 'asScrollable';\n\nlet instanceId = 0;\n\nclass AsScrollable {\n  constructor(element, options) {\n    this.$element = $(element);\n    options = this.options = $.extend({}, DEFAULTS, options || {}, this.$element.data('options') || {});\n\n    this.classes = {\n      wrap: options.namespace,\n      content: `${options.namespace}-content`,\n      container: `${options.namespace}-container`,\n      bar: `${options.namespace}-bar`,\n      barHide: `${options.namespace}-bar-hide`,\n      skin: options.skin\n    };\n\n    this.attributes = {\n      vertical: {\n        axis: 'Y',\n        overflow: 'overflow-y',\n\n        scroll: 'scrollTop',\n        scrollLength: 'scrollHeight',\n        pageOffset: 'pageYOffset',\n\n        ffPadding: 'padding-right',\n\n        length: 'height',\n        clientLength: 'clientHeight',\n        offset: 'offsetHeight',\n\n        crossLength: 'width',\n        crossClientLength: 'clientWidth',\n        crossOffset: 'offsetWidth'\n      },\n      horizontal: {\n        axis: 'X',\n        overflow: 'overflow-x',\n\n        scroll: 'scrollLeft',\n        scrollLength: 'scrollWidth',\n        pageOffset: 'pageXOffset',\n\n        ffPadding: 'padding-bottom',\n\n        length: 'width',\n        clientLength: 'clientWidth',\n        offset: 'offsetWidth',\n\n        crossLength: 'height',\n        crossClientLength: 'clientHeight',\n        crossOffset: 'offsetHeight'\n      }\n    };\n\n    // Current state information.\n    this._states = {};\n\n    // Supported direction\n    this.horizontal = null;\n    this.vertical = null;\n\n    this.$bar = null;\n\n    // Current timeout\n    this._frameId = null;\n    this._timeoutId = null;\n\n    this.instanceId = (++instanceId);\n\n    this.easing = $.asScrollbar.getEasing(this.options.easing) || $.asScrollbar.getEasing('ease');\n\n    this.init();\n  }\n\n  init() {\n    let position = this.$element.css('position');\n\n    if (this.options.containerSelector) {\n      this.$container = this.$element.find(this.options.containerSelector);\n      this.$wrap = this.$element;\n\n      if (position === 'static') {\n        this.$wrap.css('position', 'relative');\n      }\n    } else {\n      this.$container = this.$element.wrap('<div>');\n      this.$wrap = this.$container.parent();\n      this.$wrap.height(this.$element.height());\n\n      if (position !== 'static') {\n        this.$wrap.css('position', position);\n      } else {\n        this.$wrap.css('position', 'relative');\n      }\n    }\n\n    if (this.options.contentSelector) {\n      this.$content = this.$container.find(this.options.contentSelector);\n    } else {\n      this.$content = this.$container.wrap('<div>');\n      this.$container = this.$content.parent();\n    }\n\n    switch (this.options.direction) {\n      case 'vertical': {\n        this.vertical = true;\n        break;\n      }\n      case 'horizontal': {\n        this.horizontal = true;\n        break;\n      }\n      case 'both': {\n        this.horizontal = true;\n        this.vertical = true;\n        break;\n      }\n      case 'auto': {\n        let overflowX = this.$element.css('overflow-x'),\n          overflowY = this.$element.css('overflow-y');\n\n        if (overflowX === 'scroll' || overflowX === 'auto') {\n          this.horizontal = true;\n        }\n        if (overflowY === 'scroll' || overflowY === 'auto') {\n          this.vertical = true;\n        }\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    if (!this.vertical && !this.horizontal) {\n      return;\n    }\n\n    this.$wrap.addClass(this.classes.wrap);\n    this.$container.addClass(this.classes.container);\n    this.$content.addClass(this.classes.content);\n\n    if (this.options.skin) {\n      this.$wrap.addClass(this.classes.skin);\n    }\n\n    this.$wrap.addClass(this.options.enabledClass);\n\n    if (this.vertical) {\n      this.$wrap.addClass(`${this.classes.wrap}-vertical`);\n      this.initLayout('vertical');\n      this.createBar('vertical');\n    }\n\n    if (this.horizontal) {\n      this.$wrap.addClass(`${this.classes.wrap}-horizontal`);\n      this.initLayout('horizontal');\n      this.createBar('horizontal');\n    }\n\n    this.bindEvents();\n\n    this.trigger('ready');\n  }\n\n  bindEvents() {\n    if (this.options.responsive) {\n      $(window).on(this.eventNameWithId('orientationchange'), () => {\n        this.update();\n      });\n      $(window).on(this.eventNameWithId('resize'), this.throttle(() => {\n        this.update();\n      }, this.options.throttle));\n    }\n\n    if (!this.horizontal && !this.vertical) {\n      return;\n    }\n\n    let that = this;\n\n    this.$wrap.on(this.eventName('mouseenter'), () => {\n      that.$wrap.addClass(this.options.hoveringClass);\n      that.enter('hovering');\n      that.trigger('hover');\n    });\n\n    this.$wrap.on(this.eventName('mouseleave'), () => {\n      that.$wrap.removeClass(this.options.hoveringClass);\n\n      if (!that.is('hovering')) {\n        return;\n      }\n      that.leave('hovering');\n      that.trigger('hovered');\n    });\n\n    if (this.options.showOnHover) {\n      if (this.options.showOnBarHover) {\n        this.$bar.on('asScrollbar::hover', () => {\n          if(that.horizontal){\n            that.showBar('horizontal');\n          }\n          if(that.vertical){\n            that.showBar('vertical');\n          }\n        }).on('asScrollbar::hovered', () => {\n          if(that.horizontal){\n            that.hideBar('horizontal');\n          }\n          if(that.vertical){\n            that.hideBar('vertical');\n          }\n        });\n      } else {\n        this.$element.on(`${NAMESPACE$1}::hover`, $.proxy(this.showBar, this));\n        this.$element.on(`${NAMESPACE$1}::hovered`, $.proxy(this.hideBar, this));\n      }\n    }\n\n    this.$container.on(this.eventName('scroll'), () => {\n      if (that.horizontal) {\n        let oldLeft = that.offsetLeft;\n        that.offsetLeft = that.getOffset('horizontal');\n\n        if (oldLeft !== that.offsetLeft) {\n          that.trigger('scroll', that.getPercentOffset('horizontal'), 'horizontal');\n\n          if (that.offsetLeft === 0) {\n            that.trigger('scrolltop', 'horizontal');\n          }\n          if (that.offsetLeft === that.getScrollLength('horizontal')) {\n            that.trigger('scrollend', 'horizontal');\n          }\n        }\n      }\n\n      if (that.vertical) {\n        let oldTop = that.offsetTop;\n\n        that.offsetTop = that.getOffset('vertical');\n\n        if (oldTop !== that.offsetTop) {\n          that.trigger('scroll', that.getPercentOffset('vertical'), 'vertical');\n\n          if (that.offsetTop === 0) {\n            that.trigger('scrolltop', 'vertical');\n          }\n          if (that.offsetTop === that.getScrollLength('vertical')) {\n            that.trigger('scrollend', 'vertical');\n          }\n        }\n      }\n    });\n\n    this.$element.on(`${NAMESPACE$1}::scroll`, (e, api, value, direction) => {\n      if (!that.is('scrolling')) {\n        that.enter('scrolling');\n        that.$wrap.addClass(that.options.scrollingClass);\n      }\n      let bar = api.getBarApi(direction);\n\n      bar.moveTo(conventToPercentage(value), false, true);\n\n      clearTimeout(that._timeoutId);\n      that._timeoutId = setTimeout(() => {\n        that.$wrap.removeClass(that.options.scrollingClass);\n        that.leave('scrolling');\n      }, 200);\n    });\n\n    this.$bar.on('asScrollbar::change', (e, api, value) => {\n      if(typeof e.target.direction === 'string') {\n        that.scrollTo(e.target.direction, conventToPercentage(value), false, true);\n      }\n    });\n\n    this.$bar.on('asScrollbar::drag', () => {\n      that.$wrap.addClass(that.options.draggingClass);\n    }).on('asScrollbar::dragged', () => {\n      that.$wrap.removeClass(that.options.draggingClass);\n    });\n  }\n\n  unbindEvents() {\n    this.$wrap.off(this.eventName());\n    this.$element.off(`${NAMESPACE$1}::scroll`).off(`${NAMESPACE$1}::hover`).off(`${NAMESPACE$1}::hovered`);\n    this.$container.off(this.eventName());\n    $(window).off(this.eventNameWithId());\n  }\n\n  initLayout(direction) {\n    if (direction === 'vertical') {\n      this.$container.css('height', this.$wrap.height());\n    }\n    let attributes = this.attributes[direction],\n      container = this.$container[0];\n\n    // this.$container.css(attributes.overflow, 'scroll');\n\n    let parentLength = container.parentNode[attributes.crossClientLength],\n      scrollbarWidth = this.getBrowserScrollbarWidth(direction);\n\n    this.$content.css(attributes.crossLength, `${parentLength}px`);\n    this.$container.css(attributes.crossLength, `${scrollbarWidth + parentLength}px`);\n\n    if (scrollbarWidth === 0 && isFFLionScrollbar) {\n      this.$container.css(attributes.ffPadding, 16);\n    }\n  }\n\n  createBar(direction) {\n    let options = $.extend(this.options.scrollbar, {\n      namespace: this.classes.bar,\n      direction: direction,\n      useCssTransitions: false,\n      keyboard: false\n    });\n    let $bar = $('<div>');\n    $bar.asScrollbar(options);\n\n    if (this.options.showOnHover) {\n      $bar.addClass(this.classes.barHide);\n    }\n\n    $bar.appendTo(this.$wrap);\n\n    this[`$${direction}`] = $bar;\n\n    if (this.$bar === null) {\n      this.$bar = $bar;\n    } else {\n      this.$bar = this.$bar.add($bar);\n    }\n\n    this.updateBarHandle(direction);\n  }\n\n  trigger(eventType, ...params) {\n    const data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    const onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  /**\n   * Checks whether the carousel is in a specific state or not.\n   */\n  is(state) {\n    return this._states[state] && this._states[state] > 0;\n  }\n\n  /**\n   * Enters a state.\n   */\n  enter(state) {\n    if (this._states[state] === undefined) {\n      this._states[state] = 0;\n    }\n\n    // this._states[state]++;\n    this._states[state] = 1;\n  }\n\n  /**\n   * Leaves a state.\n   */\n  leave(state) {\n    // this._states[state]--;\n\n    this._states[state] = -1;\n  }\n\n  eventName(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}`;\n    }\n\n    events = events.split(' ');\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}`;\n    }\n    return events.join(' ');\n  }\n\n  eventNameWithId(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}-${this.instanceId}`;\n    }\n\n    events = events.split(' ');\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}-${this.instanceId}`;\n    }\n    return events.join(' ');\n  }\n\n  /**\n   * _throttle\n   * @description Borrowed from Underscore.js\n   */\n  throttle(func, wait) {\n    const _now = Date.now || function() {\n      return new Date().getTime();\n    };\n\n    let timeout;\n    let context;\n    let args;\n    let result;\n    let previous = 0;\n    let later = function() {\n      previous = _now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) {\n        context = args = null;\n      }\n    };\n\n    return (...params) => {\n      /*eslint consistent-this: \"off\"*/\n      let now = _now();\n      let remaining = wait - (now - previous);\n      context = this;\n      args = params;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = args = null;\n        }\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  }\n\n  getBrowserScrollbarWidth(direction) {\n    let attributes = this.attributes[direction],\n      outer, outerStyle;\n    if (attributes.scrollbarWidth) {\n      return attributes.scrollbarWidth;\n    }\n    outer = document.createElement('div');\n    outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.width = '100px';\n    outerStyle.height = '100px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.top = '-9999px';\n    document.body.appendChild(outer);\n    attributes.scrollbarWidth = outer[attributes.offset] - outer[attributes.clientLength];\n    document.body.removeChild(outer);\n    return attributes.scrollbarWidth;\n  }\n\n  getOffset(direction) {\n    let attributes = this.attributes[direction],\n      container = this.$container[0];\n\n    return (container[attributes.pageOffset] || container[attributes.scroll]);\n  }\n\n  getPercentOffset(direction) {\n    return this.getOffset(direction) / this.getScrollLength(direction);\n  }\n\n  getContainerLength(direction) {\n    return this.$container[0][this.attributes[direction].clientLength];\n  }\n\n  getScrollLength(direction) {\n    let scrollLength = this.$content[0][this.attributes[direction].scrollLength];\n    return scrollLength - this.getContainerLength(direction);\n  }\n\n  scrollTo(direction, value, trigger, sync) {\n    let type = typeof value;\n\n    if (type === 'string') {\n      if (isPercentage(value)) {\n        value = convertPercentageToFloat(value) * this.getScrollLength(direction);\n      }\n\n      value = parseFloat(value);\n      type = 'number';\n    }\n\n    if (type !== 'number') {\n      return;\n    }\n\n    this.move(direction, value, trigger, sync);\n  }\n\n  scrollBy(direction, value, trigger, sync) {\n    let type = typeof value;\n\n    if (type === 'string') {\n      if (isPercentage(value)) {\n        value = convertPercentageToFloat(value) * this.getScrollLength(direction);\n      }\n\n      value = parseFloat(value);\n      type = 'number';\n    }\n\n    if (type !== 'number') {\n      return;\n    }\n\n    this.move(direction, this.getOffset(direction) + value, trigger, sync);\n  }\n\n  move(direction, value, trigger, sync) {\n    if (this[direction] !== true || typeof value !== 'number') {\n      return;\n    }\n\n    this.enter('moving');\n\n    if (value < 0) {\n      value = 0;\n    } else if (value > this.getScrollLength(direction)) {\n      value = this.getScrollLength(direction);\n    }\n\n    let attributes = this.attributes[direction];\n\n    var that = this;\n    let callback = () => {\n      that.leave('moving');\n    };\n\n    if (sync) {\n      this.$container[0][attributes.scroll] = value;\n\n      if (trigger !== false) {\n        this.trigger('change', value / this.getScrollLength(direction), direction);\n      }\n      callback();\n    } else {\n      this.enter('animating');\n\n      let startTime = getTime();\n      let start = this.getOffset(direction);\n      let end = value;\n\n      let run = (time) => {\n        let percent = (time - startTime) / that.options.duration;\n\n        if (percent > 1) {\n          percent = 1;\n        }\n\n        percent = that.easing.fn(percent);\n\n        let current = parseFloat(start + percent * (end - start), 10);\n        that.$container[0][attributes.scroll] = current;\n\n        if (trigger !== false) {\n          that.trigger('change', value / that.getScrollLength(direction), direction);\n        }\n\n        if (percent === 1) {\n          window.cancelAnimationFrame(that._frameId);\n          that._frameId = null;\n\n          that.leave('animating');\n          callback();\n        } else {\n          that._frameId = window.requestAnimationFrame(run);\n        }\n      };\n\n      this._frameId = window.requestAnimationFrame(run);\n    }\n  }\n\n  scrollXto(value, trigger, sync) {\n    return this.scrollTo('horizontal', value, trigger, sync);\n  }\n\n  scrollYto(value, trigger, sync) {\n    return this.scrollTo('vertical', value, trigger, sync);\n  }\n\n  scrollXby(value, trigger, sync) {\n    return this.scrollBy('horizontal', value, trigger, sync);\n  }\n\n  scrollYby(value, trigger, sync) {\n    return this.scrollBy('vertical', value, trigger, sync);\n  }\n\n  getBar(direction) {\n    if (direction && this[`$${direction}`]) {\n      return this[`$${direction}`];\n    }\n    return this.$bar;\n  }\n\n  getBarApi(direction) {\n    return this.getBar(direction).data('asScrollbar');\n  }\n\n  getBarX() {\n    return this.getBar('horizontal');\n  }\n\n  getBarY() {\n    return this.getBar('vertical');\n  }\n\n  showBar(direction) {\n    this.getBar(direction).removeClass(this.classes.barHide);\n  }\n\n  hideBar(direction) {\n    this.getBar(direction).addClass(this.classes.barHide);\n  }\n\n  updateBarHandle(direction) {\n    let api = this.getBarApi(direction);\n\n    if (!api) {\n      return;\n    }\n\n    let containerLength = this.getContainerLength(direction),\n      scrollLength = this.getScrollLength(direction);\n\n    if (scrollLength > 0) {\n      if (api.is('disabled')) {\n        api.enable();\n      }\n      api.setHandleLength(api.getBarLength() * containerLength / (scrollLength + containerLength), true);\n    } else {\n\n      api.disable();\n    }\n  }\n\n  disable() {\n    if (!this.is('disabled')) {\n      this.enter('disabled');\n      this.$wrap.addClass(this.options.disabledClass).removeClass(this.options.enabledClass);\n\n      this.unbindEvents();\n      this.unStyle();\n    }\n\n    this.trigger('disable');\n  }\n\n  enable() {\n    if (this.is('disabled')) {\n      this.leave('disabled');\n      this.$wrap.addClass(this.options.enabledClass).removeClass(this.options.disabledClass);\n\n      this.bindEvents();\n      this.update();\n    }\n\n    this.trigger('enable');\n  }\n\n  update() {\n    if (this.is('disabled')) {\n      return;\n    }\n    if(this.$element.is(':visible')) {\n      if (this.vertical) {\n        this.initLayout('vertical');\n        this.updateBarHandle('vertical');\n      }\n      if (this.horizontal) {\n        this.initLayout('horizontal');\n        this.updateBarHandle('horizontal');\n      }\n    }\n  }\n\n  unStyle() {\n    if (this.horizontal) {\n      this.$container.css({\n        height: '',\n        'padding-bottom': ''\n      });\n      this.$content.css({\n        height: ''\n      });\n    }\n    if (this.vertical) {\n      this.$container.css({\n        width: '',\n        height: '',\n        'padding-right': ''\n      });\n      this.$content.css({\n        width: ''\n      });\n    }\n    if (!this.options.containerSelector) {\n      this.$wrap.css({\n        height: ''\n      });\n    }\n  }\n\n  destroy() {\n    this.$wrap.removeClass(`${this.classes.wrap}-vertical`)\n      .removeClass(`${this.classes.wrap}-horizontal`)\n      .removeClass(this.classes.wrap)\n      .removeClass(this.options.enabledClass)\n      .removeClass(this.classes.disabledClass);\n    this.unStyle();\n\n    if (this.$bar) {\n      this.$bar.remove();\n    }\n\n    this.unbindEvents();\n\n    if (this.options.containerSelector) {\n      this.$container.removeClass(this.classes.container);\n    } else {\n      this.$container.unwrap();\n    }\n    if (!this.options.contentSelector) {\n      this.$content.unwrap();\n    }\n    this.$content.removeClass(this.classes.content);\n    this.$element.data(NAMESPACE$1, null);\n    this.trigger('destroy');\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.4.8'\n};\n\nconst NAMESPACE = 'asScrollable';\nconst OtherAsScrollable = $.fn.asScrollable;\n\nconst jQueryAsScrollable = function(options, ...args) {\n  if (typeof options === 'string') {\n    let method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      let instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        let instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new AsScrollable(this, options));\n    }\n  });\n};\n\n$.fn.asScrollable = jQueryAsScrollable;\n\n$.asScrollable = $.extend({\n  setDefaults: AsScrollable.setDefaults,\n  noConflict: function() {\n    $.fn.asScrollable = OtherAsScrollable;\n    return jQueryAsScrollable;\n  }\n}, info);\n\n}(jQuery));\n"]}